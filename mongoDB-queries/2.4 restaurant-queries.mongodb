// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.
// cambiar nombre de archivo a extension .js
// The current database to use.
// ESTYO QUITARLO ANTES DE ENTREGAR
use('restaurant');

//* 1Escriu una consulta per mostrar tots els documents en la col·lecció Restaurants.
db.restaurant.find()

//* 2Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine de tots els documents en la col·lecció Restaurants.
// db.getCollection('restaurant').find({},{_id:1, name :1, borough:1, cuisine:1})

//* 3Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine, però excloent el camp _id per tots els documents en la col·lecció Restaurants.
// db.getCollection('restaurant').find({},{_id:0, name :1, borough:1, cuisine:1})

//* 4Escriu una consulta per mostrar restaurant_id, name, borough i zip code, però excloent el camp _id per tots els documents en la col·lecció Restaurants.
// db.getCollection('restaurant').find({},{_id:0, name :1, borough:1,address:{zipcode:1}})

//* 5Escriu una consulta per mostrar tots els restaurants que estan en el Bronx.
// db.restaurant.find({borough:"Bronx"})

//* 6Escriu una consulta per mostrar els primers 5 restaurants que estan en el Bronx.
// db.restaurant.find({borough:"Bronx"}).limit(5)

//* 7Escriu una consulta per mostrar els 5 restaurants després de saltar els primers 5 que siguin del Bronx.
// db.restaurant.find({borough:"Bronx"}).skip(5).limit(5)

//* 8Escriu una consulta per trobar els restaurants que tenen algun score més gran de 90.
// db.restaurant.find({grades:{$elemMatch:{score:{$gt:90}}}})

//* 9Escriu una consulta per trobar els restaurants que tenen un score més gran que 80 però menys que 100.
// db.restaurant.find({grades:{$elemMatch:{$and:[{score:{$gt:80}}, {score:{$lt:100}}]}}})

//* 10Escriu una consulta per trobar els restaurants que estan situats en una longitud inferior a -95.754168.
// db.restaurant.find({"address.coord.0":{$lt:-95.754168}})

//* 11Escriu una consulta de MongoDB per a trobar els restaurants que no cuinen menjar 'American ' i tenen algun score superior a 70 i latitud inferior a -65.754168. (HE VIST QUE American va seguit d'espai '_' a la col·lecció.)
// db.restaurant.find({$and:[{"cuisine":{$ne:"American "}}, {grades:{$elemMatch:{score:{$gt:90}}}}, {"address.coord.1":{$lt:-65.754168}}]})

//? 12Escriu una consulta per trobar els restaurants que no preparen menjar 'American' i tenen algun score superior a 70 i que, a més, es localitzen en longituds inferiors a -65.754168. Nota: Fes aquesta consulta sense utilitzar operador $and.
// .skip, .limit, .sort

//* 13Escriu una consulta per trobar els restaurants que no preparen menjar 'American ', tenen alguna nota 'A' i no pertanyen a Brooklyn. S'ha de mostrar el document segons la cuisine en ordre descendent.
// db.restaurant.find({$and:[{"cuisine":{$ne:"American "}}, {grades:{$elemMatch:{"grade":"A"}}}, {"borough":{$ne:"Brooklyn"}}]}).sort({cuisine:-1});

//* 14Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'Wil' en les tres primeres lletres en el seu nom.
// db.restaurant.find({name:{$regex:/^Wil/}}, {_id:1, name:1, borough:1, cuisine:1})

//* 15Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'ces' en les últimes tres lletres en el seu nom.
// db.restaurant.find({name:{$regex:/ces$/}}, {_id:1, name:1, borough:1, cuisine:1})

//* 16Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'Reg' en qualsevol lloc del seu nom.
// db.restaurant.find({name:{$regex:/Reg/}}, {_id:1, name:1, borough:1, cuisine:1})

//* 17Escriu una consulta per trobar els restaurants que pertanyen al Bronx i preparen plats Americans o xinesos.
// db.restaurant.find({$and:[{borough:"Bronx"}, {$or:[{cuisine:"Chinese"},{cuisine:"American "} ]}]})

//* 18Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per aquells restaurants que pertanyen a Staten Island, Queens, Bronx o Brooklyn.
// db.restaurant.find({$or:[{borough:"Staten Island"}, {borough:"Queens"},{borough:"Bronx"},{borough:"Brooklyn"}]},{_id:1, name:1, borough:1, cuisine:1})

//* 19Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que NO pertanyen a Staten Island, Queens, Bronx o Brooklyn.
// db.restaurant.find({$nor:[{borough:"Staten Island"}, {borough:"Queens"},{borough:"Bronx"},{borough:"Brooklyn"}]},{_id:1, name:1, borough:1, cuisine:1})

//* 20Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que aconsegueixin una nota menor que 10.
// db.restaurant.find({grades:{$elemMatch:{score:{$lt:10}}}},{_id:1, name:1, borough:1, cuisine:1})

//? 21Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que preparen marisc ('seafood') excepte si són 'American ', 'Chinese' o el name del restaurant comença amb lletres 'Wil'.
// db.restaurant.find({$and:[{cuisine:"seafood"}, {name:{$not:/^Wil/}}, {cuisine:{$not:"American "}}, {cuisine:{$not:"Chinese"}} ]},{_id:1, name:1, borough:1, cuisine:1})

//? 22Escriu una consulta per trobar el restaurant_id, name i grades per a aquells restaurants que aconsegueixin un grade de "A" i un score d'11 amb un ISODate "2014-08-11T00:00:00Z".
// db.restaurant.find({$and:[{grades:{$elemMatch:{grade:"A"}}},{grades:{$elemMatch:{score:11}}}, {grades:{date:{$date:{$elemMatch:"2014-08-11T00:00:00Z"}}}}]},{_id:1, name:1, grades:1})

//? 23Escriu una consulta per trobar el restaurant_id, name i grades per a aquells restaurants on el 2n element de l'array de graus conté un grade de "A" i un score 9 amb un ISODate "2014-08-11T00:00:00Z".
// db.restaurant.find({$and:[{"grades.1.grade":"A"},{"grades.1.score":9},{"grades.1.date":{$elemMatch:{"$date":"2014-08-11T00:00:00Z"}}}]},{_id:1, name:1, grades:1})

//* 24Escriu una consulta per trobar el restaurant_id, name, adreça i ubicació geogràfica per a aquells restaurants on el segon element de l'array coord conté un valor entre 42 i 52.
// db.restaurant.find({"address.coord.1":{$gt:42,$lt:52}},{_id:1, name:1, "address.street":1, "address.coord":1})

//* 25Escriu una consulta per organitzar els restaurants per nom en ordre ascendent.
// db.getCollection('restaurant').find().sort({name:1})

//* 26Escriu una consulta per organitzar els restaurants per nom en ordre descendent.
// db.getCollection('restaurant').find().sort({name:-1})

//* 27Escriu una consulta per organitzar els restaurants pel nom de la cuisine en ordre ascendent i pel barri en ordre descendent.
// db.getCollection('restaurant').find().sort({cuisine:1}, {borough:-1})

//? 28Escriu una consulta per saber si les direccions contenen el carrer.
// db.restaurant.find({"address.street":{$regex:/street/i}})

//* 29Escriu una consulta que seleccioni tots els documents en la col·lecció de restaurants on els valors del camp coord és de tipus Double.
// db.restaurant.find({"address.coord":{$type:"double"}})

//? 30Escriu una consulta que seleccioni el restaurant_id, name i grade per a aquells restaurants que retornen 0 com a residu després de dividir algun dels seus score per 7.
// db.restaurant.find({$mod:[grades:score, 7] : 0},{_id:1, name:1, grades:{grade:1}})

//* 31Escriu una consulta per trobar el name de restaurant, borough, longitud, latitud i cuisine per a aquells restaurants que contenen 'mon' en algun lloc del seu name.
// db.restaurant.find({name:{$regex:/mon/}},{_id:0, name:1, borough:1, "address.coord":1, cuisine:1})

//* 32Escriu una consulta per trobar el name de restaurant, borough, longitud, latitud i cuisine per a aquells restaurants que contenen 'Mad' com a primeres tres lletres del seu name.
// db.restaurant.find({name:{$regex:/^Mad/}},{_id:0, name:1, borough:1, "address.coord":1, cuisine:1})